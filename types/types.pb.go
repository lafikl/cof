// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/github.com/lafikl/cof/types/types.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	src/github.com/lafikl/cof/types/types.proto

It has these top-level messages:
	Footer
	Group
	Column
	Dictionary
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Footer struct {
	Groups []*Group `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
}

func (m *Footer) Reset()                    { *m = Footer{} }
func (m *Footer) String() string            { return proto.CompactTextString(m) }
func (*Footer) ProtoMessage()               {}
func (*Footer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Footer) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Group struct {
	NumRows    int64     `protobuf:"varint,1,opt,name=NumRows" json:"NumRows,omitempty"`
	NumColumns int64     `protobuf:"varint,2,opt,name=NumColumns" json:"NumColumns,omitempty"`
	Min        int64     `protobuf:"varint,3,opt,name=Min" json:"Min,omitempty"`
	Max        int64     `protobuf:"varint,4,opt,name=Max" json:"Max,omitempty"`
	Start      int64     `protobuf:"varint,5,opt,name=Start" json:"Start,omitempty"`
	End        int64     `protobuf:"varint,6,opt,name=End" json:"End,omitempty"`
	Columns    []*Column `protobuf:"bytes,7,rep,name=Columns" json:"Columns,omitempty"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Group) GetNumRows() int64 {
	if m != nil {
		return m.NumRows
	}
	return 0
}

func (m *Group) GetNumColumns() int64 {
	if m != nil {
		return m.NumColumns
	}
	return 0
}

func (m *Group) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Group) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *Group) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Group) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Group) GetColumns() []*Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

type Column struct {
	Name  string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=Type" json:"Type,omitempty"`
	Start int64  `protobuf:"varint,3,opt,name=Start" json:"Start,omitempty"`
	End   int64  `protobuf:"varint,4,opt,name=End" json:"End,omitempty"`
}

func (m *Column) Reset()                    { *m = Column{} }
func (m *Column) String() string            { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()               {}
func (*Column) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Column) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Column) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Column) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Column) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type Dictionary struct {
	Values []string `protobuf:"bytes,1,rep,name=Values" json:"Values,omitempty"`
}

func (m *Dictionary) Reset()                    { *m = Dictionary{} }
func (m *Dictionary) String() string            { return proto.CompactTextString(m) }
func (*Dictionary) ProtoMessage()               {}
func (*Dictionary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Dictionary) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*Footer)(nil), "Footer")
	proto.RegisterType((*Group)(nil), "Group")
	proto.RegisterType((*Column)(nil), "Column")
	proto.RegisterType((*Dictionary)(nil), "Dictionary")
}

func init() {
	proto.RegisterFile("src/github.com/lafikl/cof/types/types.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x18, 0xc4, 0x59, 0xdb, 0xa6, 0xf4, 0xf3, 0x22, 0x41, 0x24, 0xa7, 0x45, 0x8b, 0x87, 0x9e, 0x5a,
	0x50, 0x7c, 0x02, 0x5d, 0x3d, 0xd9, 0x43, 0x14, 0xf1, 0x9a, 0x6d, 0xe3, 0x5a, 0xdc, 0x24, 0x25,
	0x7f, 0x70, 0xfb, 0x56, 0x3e, 0xa2, 0x24, 0x69, 0xd5, 0x83, 0x97, 0x30, 0xf3, 0xcb, 0x07, 0x33,
	0x0c, 0xdc, 0x18, 0xdd, 0x35, 0xbb, 0xc1, 0xbe, 0xbb, 0x6d, 0xdd, 0x29, 0xd1, 0x88, 0xc1, 0x7c,
	0xbc, 0x29, 0x27, 0x7b, 0x66, 0x07, 0x25, 0x1b, 0x63, 0x95, 0xe6, 0x8d, 0x9d, 0x46, 0x6e, 0xe2,
	0x5b, 0x8f, 0x5a, 0x59, 0x55, 0x56, 0x80, 0xee, 0x95, 0xb2, 0x5c, 0xe3, 0x35, 0xa0, 0x9d, 0x56,
	0x6e, 0x34, 0x64, 0x75, 0x9e, 0x54, 0xc7, 0x57, 0xa8, 0x7e, 0xf0, 0x96, 0xce, 0xb4, 0xfc, 0x5a,
	0x41, 0x16, 0x08, 0x26, 0x90, 0xb7, 0x4e, 0x50, 0xf5, 0xe9, 0x4f, 0x57, 0x55, 0x42, 0x17, 0x8b,
	0xd7, 0x00, 0xad, 0x13, 0xb7, 0x6a, 0xef, 0x84, 0x34, 0xe4, 0x28, 0x7c, 0xfe, 0x21, 0xf8, 0x04,
	0x92, 0xc7, 0x41, 0x92, 0x24, 0x7c, 0x78, 0x19, 0x08, 0x3b, 0x90, 0x74, 0x26, 0xec, 0x80, 0x4f,
	0x21, 0x7b, 0xb2, 0x4c, 0x5b, 0x92, 0x05, 0x16, 0x8d, 0xbf, 0xdb, 0xc8, 0x9e, 0xa0, 0x78, 0xb7,
	0x91, 0x3d, 0xbe, 0x80, 0x7c, 0x09, 0xca, 0x43, 0xe1, 0xbc, 0x8e, 0x9e, 0x2e, 0xbc, 0x7c, 0x05,
	0x14, 0x25, 0xc6, 0x90, 0xb6, 0x4c, 0xf0, 0xd0, 0xb7, 0xa0, 0x41, 0x7b, 0xf6, 0x3c, 0x8d, 0x3c,
	0xd4, 0x2c, 0x68, 0xd0, 0xbf, 0xe1, 0xc9, 0x3f, 0xe1, 0xe9, 0x4f, 0x78, 0x79, 0x09, 0x70, 0x37,
	0x74, 0x7e, 0x59, 0xa6, 0x27, 0x7c, 0x06, 0xe8, 0x85, 0xed, 0x1d, 0x8f, 0xd3, 0x15, 0x74, 0x76,
	0x5b, 0x14, 0x36, 0xbe, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xcf, 0xee, 0xfb, 0x9c, 0x01,
	0x00, 0x00,
}
